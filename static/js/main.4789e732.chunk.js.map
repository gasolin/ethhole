{"version":3,"sources":["helpers/formatDate.js","hooks/useChainData.js","helpers/formatTVL.js","helpers/constants.js","components/TotalValueTracked.js","components/ProjectsTable.js","helpers/projectTypes.js","helpers/projects/anyswap.js","helpers/projects/connext.js","helpers/chainInfo.js","helpers/projects/cbridge.js","helpers/projects/arbitrum.js","helpers/projects/aztec.js","helpers/projects/avalanche.js","helpers/projects/bsc.js","helpers/projects/boba.js","helpers/projects/dydx.js","helpers/projects/deversifi.js","helpers/projects/eth2.js","helpers/projects/fantom.js","helpers/projects/fusion.js","helpers/projects/gluon.js","helpers/projects/habitat.js","helpers/projects/harmony.js","helpers/projects/hermez.js","helpers/projects/heco.js","helpers/projects/hop.js","helpers/projects/immutablex.js","helpers/projects/layer2finance.js","helpers/projects/loopring.js","helpers/projects/moonriver.js","helpers/projects/metis.js","helpers/projects/near.js","helpers/projects/okex.js","helpers/projects/omg.js","helpers/projects/optics.js","helpers/projects/optimism.js","helpers/projects/orbit.js","helpers/projects/polygon.js","helpers/projects/polynetwork.js","helpers/projects/rsk.js","helpers/projects/solana.js","helpers/projects/sorare.js","helpers/projects/xdai.js","helpers/projects/zkswap.js","helpers/projects/zksync.js","helpers/projects/iotex.js","helpers/bridge_contracts.js","components/ProjectTableRow.js","components/Panel.js","components/BalanceFlow.js","components/Badge.js","components/hole.svg","components/Nav.js","components/Footer.js","components/Banner.js","view/Main.js","components/ProjectMetas.js","components/TokensTable.js","components/TokenTableRow.js","components/TokensTree.js","view/Project.js","view/Liquidity.js","components/SupplyTable.js","components/TotalSupplyRow.js","hooks/useTotalSupply.js","view/Flow.js","view/routes.js","view/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["getTimeTag","day","timestamp","date","Date","setDate","getDate","toISOString","split","DAY_WHITELIST","useChainData","useState","data","setData","setTimestamp","baseUrl","useEffect","a","fetch","result","json","lastUpdate","console","error","message","fetchTimestamp","tag","includes","res","chainData","JSON","stringify","fetchData","parse","getTVL","amount","price","token","warn","human","TotalValueTracked","tvl","children","tvlTrend","tvlDiff","diffColorStyle","className","width","fill","height","viewBox","xmlns","d","ProjectsTable","scope","TYPE_LAYER2","TYPE_LAYER2_PAYMENT","TYPE_LAYER2_EXCHANGE","TYPE_LAYER2_DAO","TYPE_SIDECHAIN","TYPE_PUBLICCHAIN","TYPE_LAYER2_LEND","TYPE_LIQUIDITY","TYPE_CROSSCHAIN_DEX","TYPE_STAKING","typeMap","project","name","website","twitter","github","color","type","bridges","explorer","anyswap","hop","NOT_LAYER2","LIQUIDITY_PROJECTS","connext","cbridge","optics","orbit","ETH_BRIDGE_CONTRACTS","arbitrum","aztec","avalanche","bsc","boba","dydx","deversifi","eth2","fantom","fusion","gluon","habitat","harmony","hermez","heco","immutablex","layer2finance","loopring","metis","moonriver","near","okex","omg","optimism","polygon","polynetwork","rsk","solana","sorare","xdai","zkswap","zksync","iotex","ProjectTableRow","projMeta","sum","href","target","style","rel","Panel","observe","useDimensions","onResize","_throttle","unobserve","ref","LINK_COLOR","BalanceFlow","memo","projects","layer2","activeLink","setActiveLink","threshold","inbound","entries","filter","proj","rests","nodes","map","entry","ethIdx","length","outShift","mainLinks","idx","source","value","restShare","reduce","c","links","i","opacity","index","margin","left","right","top","bottom","onLinkMouseOver","node","onLinkMouseOut","hintValue","align","vertical","horizontal","x","y","renderHint","Badge","text","Nav","ethUsdPrice","todayInfo","src","hole","alt","Footer","Banner","class","FILTEROUT","Main","showEth","setShowEth","isLayer2","Object","keys","sort","b","getProjects","ethereum","usd","symbol","id","onChange","checked","htmlFor","navigate","wildcards","ProjectMetas","meta","item","TokensTable","TokenTableRow","bridge","tokenData","contract_ticker_symbol","logo_url","contract_address","link","TokensTree","tokens","tokenNames","push","quote","chartType","loader","options","minColor","midColor","maxColor","headerHeight","fontColor","showScale","legend","generateTooltip","row","size","rootProps","Project","prevChainData","useTitle","projectData","prevProjectData","undefined","toFixed","getBridgeName","getBridgesByProject","bridgesMeta","items","bridgeName","bridgeLink","contractLink","address","bridgeProvider","Liquidity","projectContractList","key","flat","metaMap","toLowerCase","from","p","SupplyTable","TotalSupplyRow","tokenAddress","tokenSupply","useContractCall","abi","ERC20Interface","method","useTotalSupply","decimals","useDecimals","tokenPrice","useCoingeckoTokenPrice","priceDecimals","Math","floor","dec","toString","countDecimals","mul","val","formatUnits","supplyTokens","Flow","routes","replaceAll","NotFound","config","readOnlyChainId","ChainId","Mainnet","readOnlyUrls","log","webVersion","App","Route","useRoutes","DAppProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4789e732.chunk.js","sourcesContent":["export function getTimeStamp() {\n  const now = new Date()\n  return now.toISOString()\n}\n\nexport function getTimeTag(day, timestamp) {\n  const date = new Date(timestamp)\n  switch(day) {\n    case 'yesterday':\n      date.setDate(date.getDate() - 1)\n      break\n    case 'week':\n      date.setDate(date.getDate() - 7)\n      break\n    case 'month':\n      date.setDate(date.getDate() - 30)\n      break\n    // case 'today':\n    default:\n      break\n  }\n  return date.toISOString().split('T')[0]\n}\n","import { useEffect, useState } from \"react\"\nimport { getTimeTag } from '../helpers/formatDate'\n\n// comment out for debug\n// import debugData from '../data/2021-11-06.json'\nconst debugData = ''\n\nconst DAY_WHITELIST = ['yesterday']\n\nexport const useChainData = (day) => {\n  const [data, setData] = useState('{}')\n  const [timestamp, setTimestamp] = useState('')\n  const baseUrl = 'https://raw.githubusercontent.com/gasolin/ethhole'\n\n  useEffect(() => {\n    async function fetchTimestamp() {\n      try {\n        const result = await fetch(`${baseUrl}/main/src/data/data.json`)\n        const data = await result.json()\n        setTimestamp(data.lastUpdate)\n      } catch (e) {\n        console.error(e.message)\n      }\n    }\n\n    fetchTimestamp()\n  }, [])\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        if (debugData) {\n          setData(JSON.stringify(debugData))\n        } else {\n          const tag = DAY_WHITELIST.includes(day)\n            ? timestamp\n              ? getTimeTag(day, new Date(timestamp))\n              :getTimeTag(day, new Date())\n            : timestamp\n              ? getTimeTag('today', new Date(timestamp))\n              : getTimeTag('yesterday', new Date())\n          // console.warn('time ', tag)\n          const res =  await fetch(`${baseUrl}/main/src/data/${tag}.json`)\n          const chainData = await res.json()\n          setData(JSON.stringify(chainData))\n        }\n      } catch (e) {\n        console.error(e.message)\n      }\n    }\n\n    timestamp && fetchData()\n  }, [timestamp, day])\n\n  // console.log('timestamp ', timestamp)\n  return [JSON.parse(data), timestamp]\n}\n","import human from 'millify'\n\nimport { MAX_AMOUNT } from './constants'\n\nexport function getTVL(amount, price, /* optional */ token) {\n  if (amount > MAX_AMOUNT) {\n    console.warn(token, 'has unusual amount', amount)\n  }\n  return human(amount * price)\n}\n","export const FILLTER = 1000 // USD\nexport const FLOW_THRESHOLD = 500000 // ETH\nexport const L2_FLOW_THRESHOLD = 20000\nexport const MAX_AMOUNT = 100000000\n","import { getTVL } from '../helpers/formatTVL'\n\nexport const TotalValueTracked = ({ price, tvl, children, tvlTrend, tvlDiff}) => {\n  const enabled = price === 1\n  const token = enabled ? 'Ξ' : '$'\n  const diffColorStyle = tvlTrend ? 'text-red-500' : 'text-green-500'\n  return (\n    <div className=\"shadow-lg rounded-2xl p-4 bg-white dark:bg-gray-800\">\n      <div className=\"flex items-center\">\n          <span className=\"rounded-xl relative p-4 bg-purple-200\">\n              <svg width=\"40\" fill=\"currentColor\" height=\"40\" className=\"text-purple-500 h-4 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\" viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M1362 1185q0 153-99.5 263.5t-258.5 136.5v175q0 14-9 23t-23 9h-135q-13 0-22.5-9.5t-9.5-22.5v-175q-66-9-127.5-31t-101.5-44.5-74-48-46.5-37.5-17.5-18q-17-21-2-41l103-135q7-10 23-12 15-2 24 9l2 2q113 99 243 125 37 8 74 8 81 0 142.5-43t61.5-122q0-28-15-53t-33.5-42-58.5-37.5-66-32-80-32.5q-39-16-61.5-25t-61.5-26.5-62.5-31-56.5-35.5-53.5-42.5-43.5-49-35.5-58-21-66.5-8.5-78q0-138 98-242t255-134v-180q0-13 9.5-22.5t22.5-9.5h135q14 0 23 9t9 23v176q57 6 110.5 23t87 33.5 63.5 37.5 39 29 15 14q17 18 5 38l-81 146q-8 15-23 16-14 3-27-7-3-3-14.5-12t-39-26.5-58.5-32-74.5-26-85.5-11.5q-95 0-155 43t-60 111q0 26 8.5 48t29.5 41.5 39.5 33 56 31 60.5 27 70 27.5q53 20 81 31.5t76 35 75.5 42.5 62 50 53 63.5 31.5 76.5 13 94z\">\n                  </path>\n              </svg>\n          </span>\n          <p className=\"text-md text-black dark:text-white ml-2\">\n              Total Value Tracked\n              <span className={`${diffColorStyle} text-2xl`}>\n                {'  '}\n                {tvlTrend === true && '📈'}\n                {tvlTrend === false && '📉'}\n                {tvlDiff}\n                {tvlDiff && '(24h)'}\n              </span>\n          </p>\n      </div>\n      <div className=\"flex flex-col justify-start\">\n          <p className=\"text-gray-700 dark:text-gray-100 text-4xl text-left font-bold my-4\">\n            {token} {getTVL(tvl, price, token)}\n          </p>\n          <div className=\"flex items-center text-green-500 text-sm\">\n              {/* <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M1408 1216q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\">\n                  </path>\n              </svg> */}\n              {/* <span>\n                  5.5%\n              </span> */}\n              {children}\n          </div>\n          <span className=\"text-purple-400 text-sm\">Calculated by tokens deposit to bridge contracts on Ethereum.</span>\n      </div>\n    </div>\n  )\n}\n","export const ProjectsTable = ({children}) => (\n  <table className=\"min-w-full leading-normal\">\n      <thead>\n          <tr>\n              <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                  Name\n              </th>\n              <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                  Value Locked\n              </th>\n              {/* <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                  Market Share\n              </th> */}\n              <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                  Type\n              </th>\n          </tr>\n      </thead>\n      <tbody>\n          {children}\n      </tbody>\n  </table>\n)\n","export const TYPE_LAYER2 = 'layer2'\nexport const TYPE_LAYER2_PAYMENT = 'l2payment'\nexport const TYPE_LAYER2_EXCHANGE = 'l2ex'\nexport const TYPE_LAYER2_DAO = 'l2dao'\nexport const TYPE_SIDECHAIN = 'sidechain'\nexport const TYPE_PUBLICCHAIN = 'publicchain'\nexport const TYPE_LAYER2_DERIVATIVES = 'l2derivatives'\nexport const TYPE_LAYER2_LEND = 'l2lend'\nexport const TYPE_LIQUIDITY = 'liquidity'\nexport const TYPE_CROSSCHAIN_DEX = 'crossdex'\nexport const TYPE_STAKING = 'staking'\n//\n// const TYPE_OPTIMISTIC_ROLLUP = 'optimisticrollup'\n// const TYPE_ZK_ROLLUP = 'zkrollup'\n// const TYPE_STATE_CHANNEL = 'statechannel'\n\nexport const typeMap = {\n  [TYPE_LAYER2]: 'General',\n  [TYPE_LAYER2_PAYMENT]: 'Payment',\n  [TYPE_LAYER2_EXCHANGE]: 'DEX',\n  [TYPE_LAYER2_DAO]: 'DAO',\n  [TYPE_SIDECHAIN]: 'Side Chain',\n  [TYPE_PUBLICCHAIN]: 'Public Chain',\n  // [TYPE_LAYER2_DERIVATIVES]: 'Derivatives',\n  [TYPE_LAYER2_LEND]: 'Lend',\n  [TYPE_LIQUIDITY]: 'Liquidity',\n  [TYPE_CROSSCHAIN_DEX]: 'Crosschain DEX',\n  [TYPE_STAKING]: 'Staking'\n  // [TYPE_OPTIMISTIC_ROLLUP]: \"Optimistic\",\n  // [TYPE_ZK_ROLLUP]: \"Zk\",\n  // [TYPE_STATE_CHANNEL]: \"State Channel\",\n}\n","import { TYPE_CROSSCHAIN_DEX } from '../projectTypes.js'\n\n// https://github.com/anyswap/anyswap-frontend/tree/vi-new/src/contexts/Tokens/tokens\nexport const project = {\n  name: 'AnySwap',\n  website: 'https://anyswap.exchange/',\n  twitter: 'https://twitter.com/AnyswapNetwork',\n  github: 'https://github.com/anyswap',\n  color: '#2f80ed',\n  type: TYPE_CROSSCHAIN_DEX\n}\n\nexport default project\n","import { TYPE_LIQUIDITY } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'connext',\n  website: \"https://www.connext.network/\",\n  github: \"https://github.com/connext\",\n  twitter: \"https://twitter.com/connextnetwork\",\n  color: \"#29c1fc\",\n  type: TYPE_LIQUIDITY,\n  // https://github.com/DefiLlama/DefiLlama-Adapters/blob/main/projects/connext/index.js\n  bridges: [\n      {\n        \"address\": \"0xdfa6edAe2EC0cF1d4A60542422724A48195A5071\",\n        \"chainId\": MAINNET,\n        \"name\": \"V1 hub\"\n      },\n      {\n        \"address\": \"0xe3cF69b86F274a14B87946bf641f11Ac837f4492\",\n        \"chainId\": MAINNET,\n        \"name\": \"v3 Router\"\n      },\n      {\n        \"address\": \"0xe6887c0cc3c37cb2ee34Bc58AB258f36825CA910\",\n        \"chainId\": MAINNET,\n        \"name\": \"V3 Router\"\n      },\n      {\n        \"address\": \"0xE540998865aFEB054021dc849Cc6191b8E09dC08\",\n        \"chainId\": MAINNET,\n        \"name\": \"ETH router\"\n      },\n      // {\n      //   \"address\": \"0xC6C68811E75EfD86d012587849F1A1D30427361d\",\n      //   \"chainId\": MAINNET,\n      //   \"name\": \"BSC router\"\n      // },\n    ],\n}\n\nexport default project\n","// chainId\nexport const MAINNET = 1 // ethereum\n// export const MATIC = 137\nexport const BSC = 57\nexport const XDAI = 100\n","import { TYPE_LIQUIDITY } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'cBridge', // required, name need to be able to use as key\n  website: \"https://cbridge.celer.network/\",\n  github: \"https://github.com/celer-network/cbridge-node\",\n  twitter: \"https://twitter.com/CelerNetwork\",\n  // description: 'Transfer tokens across Ethereum, Binance Smart Chain, Polygon, OKExChain, Arbitrum, Optimism, xDai, Fantom, Avalanche',\n  color: \"#FFE5E5\", // required\n  type: TYPE_LIQUIDITY, // required\n  bridges: [\n    {\n      \"address\": \"0x841ce48F9446C8E281D3F1444cB859b4A6D0738C\",  // required\n      \"chainId\": MAINNET,  // required\n      \"name\": \"cBridge\",\n      \"website\": \"https://cbridge.celer.network/\"\n    },\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2 } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Arbitrum One',\n  explorer: \"https://arbiscan.io/\",\n  website: \"https://offchainlabs.com/\",\n  github: \"https://github.com/OffchainLabs/arbitrum\",\n  twitter: \"https://twitter.com/OffchainLabs\",\n  color: \"#9e5ddb\",\n  type: TYPE_LAYER2,\n  // https://developer.offchainlabs.com/docs/useful_addresses\n  bridges: [\n    {\n      \"address\": \"0x011B6E24FfB0B5f5fCc564cf4183C5BBBc96D515\",\n      \"chainId\": MAINNET,\n      \"name\": \"Wrapped Eth Bridge\",\n      \"website\": \"https://bridge.arbitrum.io/\"\n    },\n    {\n      \"address\": \"0xa3A7B6F88361F48403514059F1F16C8E78d60EeC\",\n      \"chainId\": MAINNET,\n      \"name\": \"ERC20 Gateway\",\n      \"website\": \"https://bridge.arbitrum.io/\"\n    },\n    {\n      \"address\": \"0xcEe284F754E854890e311e3280b767F80797180d\",\n      \"chainId\": MAINNET,\n      \"name\": \"Custom Gateway\",\n      \"website\": \"https://bridge.arbitrum.io\"\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_LAYER2_PAYMENT } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Aztec',\n  explorer: \"https://explorer.aztec.network/\",\n  website: \"https://aztec.network/\",\n  github: \"https://github.com/AztecProtocol\",\n  twitter: \"https://twitter.com/aztecprotocol\",\n  color: \"#944af2\",\n  type: TYPE_LAYER2_PAYMENT,\n  bridges: [\n    {\n      \"address\": \"0x737901bea3eeb88459df9ef1BE8fF3Ae1B42A2ba\",\n      \"chainId\": MAINNET,\n      \"name\": \"zk.money\",\n      \"website\": \"https://zk.money/\"\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\nimport anyswap from './anyswap.js'\n\nexport const project = {\n  name: 'Avalanche',\n  explorer: \"https://cchain.explorer.avax.network/\",\n  website: \"https://www.avax.network/\",\n  github: \"https://github.com/ava-labs\",\n  twitter: \"https://twitter.com/avalancheavax\",\n  color: \"#e84142\",\n  type: TYPE_PUBLICCHAIN,\n  bridges: [\n    {\n      \"address\": \"0xE78388b4CE79068e89Bf8aA7f218eF6b9AB0e9d0\",\n      \"chainId\": MAINNET,\n      \"name\": \"Avalanche Bridge\",\n      \"website\": \"https://bridge.avax.network/\"\n    },\n    {\n      \"address\": \"0x820A9eb227BF770A9dd28829380d53B76eAf1209\",\n      \"chainId\": MAINNET,\n      \"name\": \"Anyswap Avalanche bridge\",\n      \"project\": anyswap.name,\n      \"website\": anyswap.website,\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\nimport anyswap from './anyswap.js'\n\n// https://www.binance.org/en/assets-proof\nexport const project = {\n  name: 'Binance Smart Chain',\n  explorer: \"https://bscscan.com/\",\n  website: \"https://www.binance.org/en/smartChain\",\n  github: \"https://github.com/binance-chain/\",\n  twitter: \"https://twitter.com/binancechain\",\n  color: \"#f8d12f\",\n  type: TYPE_PUBLICCHAIN,\n  bridges: [\n    {\n      \"address\": \"0x47ac0Fb4F2D84898e4D9E7b4DaB3C24507a6D503\",\n      \"chainId\": MAINNET,\n      \"name\": \"Binance Smart Chain Bridge\",\n      \"website\": \"https://www.binance.org/en/bridge\"\n    },\n    {\n      \"address\": \"0x9BF4001d307dFd62B26A2F1307ee0C0307632d59\",\n      \"chainId\": MAINNET,\n      \"name\": \"Binance Smart Chain ETH Bridge\",\n      \"website\": \"https://www.binance.org/en/bridge\"\n    },\n    {\n      \"address\": \"0x13B432914A996b0A48695dF9B2d701edA45FF264\",\n      \"chainId\": MAINNET,\n      \"name\": \"Nerve Bridge\",\n      \"project\": anyswap.name,\n      \"website\": \"https://app.nerve.fi/bridge\"\n    },\n    {\n      \"address\": \"0x533e3c0e6b48010873B947bddC4721b1bDFF9648\",\n      \"chainId\": MAINNET,\n      \"name\": \"Anyswap BSC bridge\",\n      \"project\": anyswap.name,\n      \"website\": anyswap.website,\n      \"exclude\": [\"STAR\", \"FORM\"],\n      \"excludeAddr\": [\n        \"0xd2dda223b2617cb616c1580db421e4cfae6a8a85\", //BONDLY\n        \"0x676cdc3312d0350749bed17cd3eb3b90e5917f42\", //BONDLY\n        \"0xb5a4ac5b04e777230ba3381195eff6a60c3934f2\", // SURE\n        \"0xa283aa7cfbb27ef0cfbcb2493dd9f4330e0fd304\", //MM\n      ]\n    },\n    {\n      \"address\": \"0xf301d525da003e874DF574BCdd309a6BF0535bb6\",\n      \"chainId\": MAINNET,\n      \"name\": \"Fuse tokens bridge\",\n      \"website\": \"https://fuseswap.com/#/bridge\",\n      \"excludeAddr\": [\n        \"0x26ce25148832c04f3d7f26f32478a9fe55197166\", //DEXT\n      ]\n    }\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2 } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Boba Network',\n  explorer: \"https://blockexplorer.boba.network/\",\n  website: \"https://boba.network\",\n  github: \"https://github.com/omgnetwork\",\n  twitter: \"https://twitter.com/bobanetwork\",\n  color: \"#ccff00\",\n  type: TYPE_LAYER2,\n  bridges: [\n    {\n      \"address\": \"0xdc1664458d2f0B6090bEa60A8793A4E66c2F1c00\",\n      \"chainId\": MAINNET,\n      \"name\": \"L1 Standard Bridge\"\n    },\n    {\n      \"address\": \"0x1A26ef6575B7BBB864d984D9255C069F6c361a14\",\n      \"chainId\": MAINNET,\n      \"name\": \"L1 Liquidity Pool\"\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_LAYER2_EXCHANGE } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'dydx',\n  website: \"https://dydx.exchange/\",\n  github: \"https://github.com/dydxprotocol\",\n  twitter: \"https://twitter.com/dydxprotocol\",\n  color: \"#6966FF\",\n  type: TYPE_LAYER2_EXCHANGE,\n  bridges: [\n    {\n      \"address\": \"0xD54f502e184B6B739d7D27a6410a67dc462D69c8\",\n      \"chainId\": MAINNET,\n    }\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2_EXCHANGE } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'DeversiFi',\n  website: \"https://www.deversifi.com/\",\n  github: \"https://github.com/deversifi\",\n  twitter: \"https://twitter.com/deversifi\",\n  color: \"#5500FC\",\n  type: TYPE_LAYER2_EXCHANGE,\n  bridges: [\n    {\n      \"address\": \"0x5d22045DAcEAB03B158031eCB7D9d06Fad24609b\",\n      \"chainId\": MAINNET,\n    }\n  ]\n}\n\nexport default project\n","import { TYPE_STAKING } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: \"ETH 2\",\n  website: \"https://ethereum.org/en/eth2/\",\n  github: \"https://github.com/ethereum/eth2.0-specs\",\n  twitter: \"https://twitter.com/ethdotorg\",\n  color: \"#747c84\",\n  type: TYPE_STAKING,\n  bridges: [\n    {\n      \"address\": \"0x00000000219ab540356cbb839cbe05303d7705fa\",\n      \"chainId\": MAINNET,\n      \"name\": \"ETH2 Staking\",\n      \"website\": \"https://launchpad.ethereum.org/en/\",\n      \"excludeAddr\": [\n        \"0x8727c112c712c4a03371ac87a74dd6ab104af768\", // JET\n      ]\n    },\n  ]\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\nimport anyswap from './anyswap.js'\n\nexport const project = {\n  name: 'Fantom',\n  explorer: \"https://explorer.fantom.network/\",\n  website: \"https://fantom.foundation/\",\n  github: \"https://github.com/Fantom-Foundation\",\n  twitter: \"https://twitter.com/FantomFDN\",\n  color: \"#1969ff\",\n  type: TYPE_PUBLICCHAIN,\n  bridges: [\n    {\n      \"address\": \"0x65e64963b755043CA4FFC88029FfB8305615EeDD\",\n      \"chainId\": MAINNET,\n      \"name\": \"Anyswap Fantom bridge\",\n      \"project\": anyswap.name,\n      \"website\": anyswap.website\n    },\n    // fUSDT\n    {\n      \"address\": \"0xC564EE9f21Ed8A2d8E7e76c085740d5e4c5FaFbE\",\n      \"chainId\": MAINNET,\n      \"name\": \"Anyswap Fantom bridge\",\n      \"project\": anyswap.name,\n      \"website\": anyswap.website,\n      \"excludeAddr\": [\n        \"0x3472a5a71965499acd81997a54bba8d852c6e53d\", //BADGER\n      ],\n    },\n    // USDT\n    {\n      \"address\": \"0xBe008e52c5682A49dd0260735a26Aa221f303456\",\n      \"chainId\": MAINNET,\n      \"name\": \"Anyswap Fantom bridge\",\n      \"project\": anyswap.name,\n      \"website\": anyswap.website\n    },\n    {\n      \"address\": \"0x9A8C4bdCd75CFa1059A6E453Ac5cE9d3F5c82A35\",\n      \"chainId\": MAINNET,\n      \"name\": \"Fantom Bridge\"\n    },\n  ]\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\nimport anyswap from './anyswap.js'\n\nexport const project = {\n  name: 'Fusion',\n  explorer: \"https://fsnex.com/blocks\",\n  website: \"https://www.fusion.org/en\",\n  github: \"https://github.com/FUSIONFoundation\",\n  twitter: \"https://twitter.com/FUSIONProtocol\",\n  color: \"#358dcc\",\n  type: TYPE_PUBLICCHAIN,\n  bridges: [\n    {\n      \"address\": \"0x46290B0c3A234E3d538050d8F34421797532A827\",\n      \"chainId\": MAINNET,\n      \"name\": \"Anyswap Fusion bridge\",\n      \"project\": anyswap.name,\n      \"website\": anyswap.website\n    },\n  ],\n}\n\nexport default project\n","import { TYPE_SIDECHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: \"GLUON\",\n  explorer: \"https://gluon.leverj.io/\",\n  website: \"https://gluon.network/\",\n  github: \"https://github.com/leverj\",\n  twitter: \"https://twitter.com/GluonNetwork\",\n  color: \"#f7961c\",\n  type: TYPE_SIDECHAIN,\n  // https://live.leverj.io/futures/api/v1/all/config assets\n  bridges: [\n    {\n      \"address\": \"0x75ace7a086ea0fb1a79e43cc6331ad053d8c67cb\",\n      \"chainId\": MAINNET,\n      \"name\": \"GLUON bridge\",\n      \"project\": 'GLUON',\n      \"website\": \"https://gluon.network/\",\n      \"exclude\": [\"uxtw.com$0.02回购\"]\n    },\n    // assets\n    {\n      \"address\": \"0xBbff34E47E559ef680067a6B1c980639EEb64D24\",\n      \"chainId\": MAINNET,\n      \"name\": \"L2 bridge\",\n    },\n    {\n      \"address\": \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n      \"chainId\": MAINNET,\n      \"name\": \"USDT bridge\",\n      \"exclude\": ['SPA'],\n    },\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2_DAO } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Habitat',\n  explorer: \"https://0xhabitat.org/explorer/\",\n  website: \"https://0xhabitat.org/\",\n  github: \"https://github.com/0xHabitat\",\n  twitter: \"https://twitter.com/EnterTheHabitat\",\n  color: \"#FBDC60\",\n  type: TYPE_LAYER2_DAO,\n  bridges: [\n    {\n      \"address\": \"0x96E471B5945373dE238963B4E032D3574be4d195\",\n      \"chainId\": MAINNET,\n    }\n  ]\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Harmony',\n  explorer: \"https://explorer.harmony.one/\",\n  website: \"https://www.harmony.one/\",\n  github: \"https://github.com/harmony-one\",\n  twitter: \"https://harmony.one/twitter\",\n  color: \"#00ade8\",\n  type: TYPE_PUBLICCHAIN,\n  // https://github.com/harmony-one/ethhmy-bridge.sdk/blob/main/src/configs/mainnet.ts\n  bridges: [\n    {\n      \"address\": \"0xfD53b1B4AF84D59B20bF2C20CA89a6BeeAa2c628\",\n      \"chainId\": MAINNET,\n      \"name\": \"BUSD bridge\"\n    },\n    {\n      \"address\": \"0xfE601dE9D4295274b9904D5a9Ad7069F23eE2B32\",\n      \"chainId\": MAINNET,\n      \"name\": \"LINK bridge\"\n    },\n    {\n      \"address\": \"0x2dCCDB493827E15a5dC8f8b72147E6c4A5620857\",\n      \"chainId\": MAINNET,\n      \"name\": \"ERC20 bridge\"\n    },\n    {\n      \"address\": \"0xF9Fb1c508Ff49F78b60d3A96dea99Fa5d7F3A8A6\",\n      \"chainId\": MAINNET,\n      \"name\": \"ETH bridge\"\n    }\n    // {\n    //   \"address\": \"0x426A61A2127fDD1318Ec0EdCe02474f382FdAd30\",\n    //   \"name\": \"ERC721 manager\"\n    // }\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2_PAYMENT } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Polygon Hermez',\n  explorer: \"https://explorer.hermez.io/\",\n  website: \"https://hermez.io/\",\n  github: \"https://github.com/hermeznetwork/\",\n  twitter: \"https://twitter.com/hermez_network\",\n  color: \"#e75a2b\",\n  type: TYPE_LAYER2_PAYMENT,\n  bridges: [\n    {\n      \"address\": \"0xA68D85dF56E733A06443306A095646317B5Fa633\",\n      \"chainId\": MAINNET,\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\nimport anyswap from './anyswap.js'\n\nexport const project = {\n  name: 'HUOBI ECO CHAIN',\n  explorer: \"https://hecoinfo.com/\",\n  website: \"https://www.hecochain.com/en-us/\",\n  github: \"https://github.com/huobiGroup/\",\n  twitter: \"https://twitter.com/HECO_Chain\",\n  color: \"#01943f\",\n  type: TYPE_PUBLICCHAIN,\n  bridges: [\n    // https://docs.hecochain.com/#/hecobridge\n    {\n      \"address\": \"0xa929022c9107643515f5c777ce9a910f0d1e490c\",\n      \"chainId\": MAINNET,\n      \"name\": \"Huobi ECO Chain bridge\",\n      \"exclude\": ['PLS', '🧙‍♂️WIZ🧙‍♂️']\n    },\n    {\n      \"address\": \"0xD779967F8B511C5edf39115341B310022900eFED\",\n      \"chainId\": MAINNET,\n      \"name\": \"connext HECO bridge\",\n      \"project\": anyswap.name\n    },\n  ]\n}\n\nexport default project\n","import { TYPE_CROSSCHAIN_DEX } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Hop',\n  website: 'https://app.hop.exchange/',\n  twitter: 'https://twitter.com/HopProtocol',\n  github: 'https://github.com/hop-protocol',\n  color: '#B32EFF',\n  type: TYPE_CROSSCHAIN_DEX,\n  bridges: [\n    {\n      \"address\": \"0x3666f603Cc164936C1b87e207F36BEBa4AC5f18a\",\n      \"chainId\": MAINNET,\n      \"name\": \"Hop Exchange Bridge\"\n    }\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2_EXCHANGE } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'ImmutableX',\n  website: \"https://www.immutable.com/\",\n  twitter: \"https://twitter.com/immutable\",\n  explorer: \"https://immutascan.io/\",\n  color: \"#24d1e9\",\n  type: TYPE_LAYER2_EXCHANGE,\n  bridges: [\n    {\n      \"address\": \"0x5FDCCA53617f4d2b9134B29090C87D01058e27e9\",\n      \"chainId\": MAINNET,\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_LAYER2_LEND } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Layer2.Finance',\n  website: \"https://layer2.finance/\",\n  github: \"https://github.com/celer-network/layer2-finance-contracts\",\n  twitter: \"https://twitter.com/layer2finance\",\n  color: \"#ca9979\",\n  type: TYPE_LAYER2_LEND,\n  // https://etherscan.io/address/0xFe81ab6930A30BdaE731fe7b6C6ABFbEAFc014a8#readContract\n  // the main address's token balance will flow to other DEFI periodically,\n  // need to track strategies TVL\n  bridges: [\n    {\n      \"address\": \"0xf86FD6735f88d5b6aa709B357AD5Be22CEDf1A05\",\n      \"chainId\": MAINNET,\n      \"name\": \"Layer 2\",\n    },\n    {//1\n      \"address\": \"0x9D233A907E065855D2A9c7d4B552ea27fB2E5a36\",\n      \"chainId\": MAINNET,\n      \"name\": \"AAVE DAI\"\n    },\n    {//2\n      \"address\": \"0xCbE56b00d173A26a5978cE90Db2E33622fD95A28\",\n      \"chainId\": MAINNET,\n      \"name\": \"AAVE USDC\"\n    },\n    {//3\n      \"address\": \"0xf4B2cbc3bA04c478F0dC824f4806aC39982Dce73\",\n      \"chainId\": MAINNET,\n      \"name\": \"AAVE USDT\"\n    },\n    // {//4\n    //   \"address\": \"0x50B96c4374EFeEA0C183D06679A14e951E33B4Dd\",\n    //   \"chainId\": MAINNET,\n    //   \"name\": \"AAVE SUSD\"\n    // },\n    {//5\n      \"address\": \"0x30640476B9b47aBa450e351e8527Ba35B5E995bf\",\n      \"chainId\": MAINNET,\n      \"name\": \"AAVE BUSD\"\n    },\n    // {//6\n    //   \"address\": \"0x61fc4d40D313Eb01483F537A6db2B29fB38aEa8d\",\n    //   \"chainId\": MAINNET,\n    //   \"name\": \"Compound ETH\"\n    // },\n    {//7\n      \"address\": \"0x7A05831A2D0Dd5aA0c638c9d22c29b21DA5067Da\",\n      \"chainId\": MAINNET,\n      \"name\": \"Compound DAI\"\n    },\n    {//8\n      \"address\": \"0x4d6406895EF1b408F0F3D4c4696e394Cc78629A0\",\n      \"chainId\": MAINNET,\n      \"name\": \"Compound USDC\"\n    },\n    {//9\n      \"address\": \"0xc8e3785BCf59aC59d7a449128c633c6F6272D156\",\n      \"chainId\": MAINNET,\n      \"name\": \"Compound USDT\"\n    },\n    // TODO: query fail\n    // {//10\n    //   \"address\": \"0x1DA1cebC2525a5Bb1242CAde6E923F3f1388874E\",\n    //   \"chainId\": MAINNET,\n    //   \"name\": \"Curve3Pool Dai\",\n    //   \"staked\": [\"curve\"]\n    // },\n    // {//11\n    //   \"address\": \"0x3D3092560d48c02f524dfb3fa3CAdDc8A5717751\",\n    //   \"chainId\": MAINNET,\n    //   \"name\": \"Curve3Pool USDC\",\n    //   \"staked\": [\"curve\"]\n    // },\n    // {//12\n    //   \"address\": \"0xca222c64b7f3ca0322356fA19e9A09a13bE71e06\",\n    //   \"chainId\": MAINNET,\n    //   \"name\": \"Curve3Pool USDT\",\n    //   \"staked\": [\"curve\"]\n    // },\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2_EXCHANGE } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Loopring',\n  website: \"https://loopring.org\",\n  github: \"https://github.com/Loopring\",\n  twitter: \"https://twitter.com/loopringorg\",\n  color: \"#1c42ff\",\n  type: TYPE_LAYER2_EXCHANGE,\n  bridges: [\n    {\n      \"address\": \"0x674bdf20A0F284D710BC40872100128e2d66Bd3f\",\n      \"chainId\": MAINNET,\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\nimport anyswap from './anyswap.js'\n\nexport const project = {\n  name: 'Moonriver', // required, name need to be able to use as key\n  // explorer: \"https://\",\n  website: \"https://moonbeam.network/networks/moonriver/\",\n  github: \"https://github.com/PureStake/moonbeam\",\n  twitter: \"https://twitter.com/moonbeamnetwork\",\n  // description: \"Solidity Smart Contracts on Kusama\",\n  color: \"#e1147b\", // required\n  type: TYPE_PUBLICCHAIN, // required\n  bridges: [\n    {\n      \"address\": \"0x10c6b61DbF44a083Aec3780aCF769C77BE747E23\",  // required\n      \"chainId\": MAINNET,  // required\n      \"name\": \"Anyswap MoonRiver bridge\",\n      \"project\": anyswap.name,\n      \"website\": anyswap.website\n    },\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2 } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Metis',\n  website: \"https://www.metis.io/\",\n  github: \"https://github.com/MetisProtocol\",\n  twitter: \"https://twitter.com/MetisDAO\",\n  explorer: \"https://andromeda-explorer.metis.io/\",\n  color: \"#1abc9c\",\n  type: TYPE_LAYER2,\n  bridges: [\n    {\n      \"address\": \"0x3980c9ed79d2c191A89E02Fa3529C60eD6e9c04b\",\n      \"chainId\": MAINNET,\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: \"NEAR\",\n  website: \"https://near.org/\",\n  github: \"https://github.com/near\",\n  twitter: \"https://twitter.com/nearprotocol\",\n  color: \"#111618\",\n  type: TYPE_PUBLICCHAIN,\n  bridges: [\n    {\n      \"address\": \"0x23ddd3e3692d1861ed57ede224608875809e127f\",\n      \"chainId\": MAINNET,\n      \"name\": \"Rainbow bridge\"\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: \"OKExChain\",\n  explorer: \"https://www.oklink.com/okexchain\",\n  website: \"https://www.okex.com/okexchain\",\n  github: \"https://github.com/okex/exchain\",\n  twitter: \"https://twitter.com/OKExChain\",\n  color: \"#205fec\",\n  type: TYPE_PUBLICCHAIN,\n  // https://www.okex.com/cross-chain-gateway\n  bridges: [\n    {\n      \"address\": \"0x2c8fbb630289363ac80705a1a61273f76fd5a161\",\n      \"chainId\": MAINNET,\n      \"name\": \"OKExChain bridge\",\n      \"excludeAddr\": [\n        \"0xa06884f35916badb1bf974a30df1accb2cc316cb\", //Floki\n      ]\n    },\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2_PAYMENT } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'OMG',\n  explorer: \"hhttps://blockexplorer.mainnet.v1.omg.network/\",\n  website: 'https://omg.network',\n  github: 'https://github.com/omgnetwork',\n  twitter: 'https://twitter.com/omgnetworkhq',\n  color: \"#4967ff\",\n  type: TYPE_LAYER2_PAYMENT,\n  bridges: [\n    {\n      \"address\": \"0x3Eed23eA148D356a72CA695DBCe2fceb40a32ce0\",\n      \"chainId\": MAINNET,\n      \"name\": \"ETH bridge\"\n    },\n    {\n      \"address\": \"0x070cB1270A4B2bA53c81CeF89d0FD584Ed4F430B\",\n      \"chainId\": MAINNET,\n      \"name\": \"ERC20 bridge\"\n    },\n  ]\n}\n\nexport default project\n","import { TYPE_LIQUIDITY } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Celo Optics Bridge',\n  website: \"https://docs.celo.org/celo-codebase/protocol/optics\",\n  github: \"https://github.com/celo-org/optics-monorepo\",\n  color: \"#35d07f\",\n  type: TYPE_LIQUIDITY,\n  bridges: [\n    {\n      \"address\": \"0x6a39909e805A3eaDd2b61fFf61147796ca6aBB47\",\n      \"chainId\": MAINNET,\n      \"name\": \"Optics Bridge\"\n    }\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2 } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\nimport hop from './hop.js'\n\nexport const project = {\n  name: 'Optimism',\n  explorer: \"https://optimistic.etherscan.io/\",\n  website: \"https://optimism.io/\",\n  github: \"https://github.com/ethereum-optimism\",\n  twitter: \"https://twitter.com/optimismPBC\",\n  color: \"#f01a37\",\n  type: TYPE_LAYER2,\n  bridges: [\n    // old snx bridge\n    {\n      \"address\": \"0x5fd79d46eba7f351fe49bff9e87cdea6c821ef9f\",\n      \"chainId\": MAINNET,\n      \"name\": \"Optimism Synthetix escrow\"\n    },\n    // https://github.com/makerdao/optimism-dai-bridge\n    {\n      \"address\": \"0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65\",\n      \"chainId\": MAINNET,\n      \"name\": \"Optimism Dai Bridge\"\n    },\n    {\n      \"address\": \"0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1\",\n      \"chainId\": MAINNET,\n      \"name\": \"Optimism Gateway\"\n    },\n    {\n      \"address\": \"0x3E4a3a4796d16c0Cd582C382691998f7c06420B6\",\n      \"chainId\": MAINNET,\n      \"name\": \"Hop Optimism bridge\",\n      \"project\": hop.name,\n      \"website\": hop.website\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_LIQUIDITY } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'Orbit',\n  website: 'https://bridge.orbitchain.io/',\n  explorer: 'https://bridge.orbitchain.io/history',\n  twitter: 'https://twitter.com/Orbit_Chain',\n  color: '#0676aa',\n  type: TYPE_LIQUIDITY,\n  bridges: [\n    {\n      \"address\": \"0x1Bf68A9d1EaEe7826b3593C20a0ca93293cb489a\",\n      \"chainId\": MAINNET,\n      \"name\": \"Orbit Bridge\"\n    }\n  ]\n}\n\nexport default project\n","import { TYPE_SIDECHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\nimport anyswap from './anyswap.js'\n\nexport const project = {\n  name: 'Polygon',\n  explorer: \"https://explorer-mainnet.maticvigil.com/\",\n  website: \"https://polygon.technology/\",\n  github: \"https://github.com/maticnetwork/\",\n  twitter: \"https://twitter.com/maticnetwork\",\n  color: \"#8248e5\",\n  type: TYPE_SIDECHAIN,\n  // https://github.com/maticnetwork/static/blob/master/network/mainnet/v1/index.json\n  // https://github.com/DefiLlama/DefiLlama-Adapters/blob/main/projects/polygon/index.js\n  bridges: [\n    {\n      \"address\": \"0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30\",\n      \"chainId\": MAINNET,\n      \"name\": \"PoS Ether bridge\"\n    },\n    {\n      \"address\": \"0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf\",\n      \"chainId\": MAINNET,\n      \"name\": \"PoS ERC20 bridge\",\n      \"protocol\": [\"dhedge\", \"synthetix\", \"mushroom\", \"aave\"],\n      \"exclude\": [\"KNG\"],\n      \"excludeAddr\": [\n        \"0x91dfbee3965baaee32784c2d546b7a0c62f268c9\", //BONDLY\n        \"0xcd1faff6e578fa5cac469d2418c95671ba1a62fe\", //XTM\n        \"0xa283aa7cfbb27ef0cfbcb2493dd9f4330e0fd304\", //MM\n        \"0x1beef31946fbbb40b877a72e4ae04a8d1a5cee06\", //PAR\n        \"0xb5a4ac5b04e777230ba3381195eff6a60c3934f2\", //SURE\n        \"0xf5d669627376ebd411e34b98f19c868c8aba5ada\", //AXS\n        \"0x33e18a092a93ff21ad04746c7da12e35d34dc7c4\", //PLAY\n        \"0x2baecdf43734f22fd5c152db08e3c27233f0c7d2\", //OM\n        \"0x5dc02ea99285e17656b8350722694c35154db1e8\", //BOND\n        \"0xdd974d5c2e2928dea5f71b9825b8b646686bd200\", //KNC\n        \"0x55b1a124c04a54eefdefe5fa2ef5f852fb5f2f26\", //ETHM\n        \"0x1eb754b8355d3185a7429109bde75e473434b26b\", //EZ\n        \"0xdd1ad9a21ce722c151a836373babe42c868ce9a4\", //UBI\n      ],\n    },\n    {\n      \"address\": \"0x401F6c983eA34274ec46f84D70b31C151321188b\",\n      \"chainId\": MAINNET,\n      \"name\": \"Plasma bridge\"\n    },\n    {\n      \"address\": \"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0\",\n      \"chainId\": MAINNET,\n      \"name\": \"MATIC token\"\n    },\n    {\n      \"address\": \"0x5e3Ef299fDDf15eAa0432E6e66473ace8c13D908\",\n      \"chainId\": MAINNET,\n      \"name\": \"Stake Manager\"\n    },\n    {\n      \"address\": \"0x668b9734FfE9eE8a01d4Ade3362De71E8989EA87\",\n      \"chainId\": MAINNET,\n      \"name\": \"Anyswap Polygon bridge\",\n      \"project\": anyswap.name,\n      \"website\": anyswap.website\n    },\n    {\n      \"address\": \"0xF78765bd14B4E8527d9E4E5c5a5c11A44ad12F47\",\n      \"chainId\": MAINNET,\n      \"name\": \"Biconomy Hyphen Bridge\",\n      \"website\": \"https://hyphen.biconomy.io/\",\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_SIDECHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'PolyNetwork',\n  explorer: \"https://explorer.poly.network/\",\n  website: \"https://www.poly.network/\",\n  github: \"https://github.com/polynetwork\",\n  twitter: \"https://twitter.com/PolyNetwork2\",\n  color: \"#2222FF\",\n  type: TYPE_SIDECHAIN,\n  // https://github.com/polynetwork/docs/blob/master/config/README.md\n  bridges: [\n    {\n      \"address\": \"0x250e76987d838a75310c34bf422ea9f1AC4Cc906\",\n      \"name\": \"Lock Proxy\",\n      \"chainId\": MAINNET,\n      \"excludeAddr\": [\n        \"0xcb46c550539ac3db72dc7af7c89b11c306c727c2\", //pONT\n      ],\n    },\n    // {\n    //   \"address\": \"0x2f7ac9436ba4B548f9582af91CA1Ef02cd2F1f03\",\n    //   \"name\": \"Lock Proxy\",\n    //   \"chainId\": BSC,\n    // },\n  ]\n}\n\nexport default project\n","import { TYPE_SIDECHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'RSK',\n  explorer: \"https://explorer.rsk.co/\",\n  website: \"https://www.rsk.co/\",\n  twitter: \"https://twitter.com/rsksmart\",\n  color: \"#00b520\",\n  type: TYPE_SIDECHAIN,\n  // https://developers.rsk.co/tools/tokenbridge/contractaddresses/\n  bridges: [\n    {\n      \"address\": \"0x12ed69359919fc775bc2674860e8fe2d2b6a7b5d\",\n      \"name\": \"Bridge\",\n      \"chainId\": MAINNET,\n    },\n  ]\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'SOLANA',\n  explorer: \"https://explorer.solana.com/\",\n  website: \"https://solana.com/\",\n  github: \"https://github.com/solana-labs/\",\n  twitter: \"https://twitter.com/\",\n  color: \"#d83aeb\",\n  type: TYPE_PUBLICCHAIN,\n  bridges: [\n    {\n      \"address\": \"0xeae57ce9cc1984F202e15e038B964bb8bdF7229a\",\n      \"name\": \"Sollet Bridge\",\n      \"chainId\": MAINNET,\n      \"website\": \"https://www.sollet.io/\",\n      \"excludeAddr\": [\n        \"0xc0134b5b924c2fca106efb33c45446c466fbe03e\", //ALEPH\n      ],\n    },\n    {\n      \"address\": \"0xf92cD566Ea4864356C5491c177A430C222d7e678\",\n      \"name\": \"Wormhole Bridge\",\n      \"chainId\": MAINNET,\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_LAYER2_EXCHANGE } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'sorare',\n  website: \"https://sorare.com/\",\n  twitter: \"https://twitter.com/sorarehq\",\n  color: \"#21284a\",\n  type: TYPE_LAYER2_EXCHANGE,\n  bridges: [\n    {\n      \"address\": \"0xF5C9F957705bea56a7e806943f98F7777B995826\",\n      \"name\": \"starkware\",\n      \"chainId\": MAINNET,\n    },\n  ],\n}\n\nexport default project\n","import { TYPE_SIDECHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\nimport anyswap from './anyswap.js'\n\nexport const project = {\n  name: \"xDai\",\n  explorer: \"https://blockscout.com/poa/xdai/\",\n  website: \"https://www.xdaichain.com/\",\n  twitter: \"https://twitter.com/xdaichain\",\n  color: \"#1ca9a6\",\n  type: TYPE_SIDECHAIN,\n  // https://www.xdaichain.com/about-xdai/news-and-information/comparisons/matic#similarities-and-differences\n  // https://github.com/DefiLlama/DefiLlama-Adapters/blob/main/projects/xdai/index.js\n  bridges: [\n    {\n      \"address\": \"0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016\",\n      \"name\": \"xDai Bridge\",\n      \"chainId\": MAINNET,\n    },\n    {\n      \"address\": \"0x88ad09518695c6c3712ac10a214be5109a655671\",\n      \"name\": \"Omni Bridge\",\n      \"chainId\": MAINNET,\n      \"protocol\": [\"sushiswap\", \"synthetix\", \"uniswap\"],\n      \"excludeAddr\": [\n        \"0xdada02029134f73af874640ef351a8cf85ddada0\", //NODE\n        \"0x9ca85572e6a3ebf24dedd195623f188735a5179f\", //y3CRV\n        \"0x70f823ed7643fd7a26fdf8753827d31c16374fde\", //PKGX\n        \"0x072b999fc3d82f9ea08b8adbb9d63a980ff2b14d\", //Sushiswap LP old\n      ]\n    },\n    {\n      \"address\": \"0xed7e6720ac8525ac1aeee710f08789d02cd87ecb\",\n      \"chainId\": MAINNET,\n      \"name\": \"owl bridge\"\n    },\n    {\n      \"address\": \"0x2F10c5eE93ac666dA72195abA8a49FD6D27fA02F\",\n      \"chainId\": MAINNET,\n      \"name\": \"Anyswap XDAI bridge\",\n      \"project\": anyswap.name\n    },\n  ]\n}\n\nexport default project\n","import { TYPE_LAYER2_EXCHANGE } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: \"ZKSwap\",\n  explorer: \"https://zkswap.info/en\",\n  website: \"https://zks.app\",\n  github: \"https://github.com/l2labs\",\n  twitter: \"https://twitter.com/ZKSwapOfficial\",\n  color: \"#596efd\",\n  type: TYPE_LAYER2_EXCHANGE,\n  bridges: [\n    {\n      \"address\": \"0x8eca806aecc86ce90da803b080ca4e3a9b8097ad\",\n      \"chainId\": MAINNET,\n      \"name\": \"ZKSwap (v1)\",\n    },\n    {\n      \"address\": \"0x6dE5bDC580f55Bc9dAcaFCB67b91674040A247e3\",\n      \"chainId\": MAINNET,\n      \"name\": \"ZKSwap (v2)\",\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_LAYER2_PAYMENT } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: \"zkSync\",\n  explorer: \"https://zkscan.io/explorer/\",\n  website: \"https://zksync.io/\",\n  github: \"https://github.com/matter-labs/zksync\",\n  twitter: \"https://twitter.com/zksync\",\n  color: \"#8c8dfc\",\n  type: TYPE_LAYER2_PAYMENT,\n  bridges: [\n    {\n      \"address\": \"0xaBEA9132b05A70803a4E85094fD0e1800777fBEF\",\n      \"chainId\": MAINNET,\n    }\n  ],\n}\n\nexport default project\n","import { TYPE_PUBLICCHAIN } from '../projectTypes.js'\nimport { MAINNET } from '../chainInfo.js'\n\nexport const project = {\n  name: 'IoTeX',\n  explorer: \"https://iotexscan.io/\",\n  website: \"https://www.iotex.io\",\n  github: \"https://github.com/iotexproject/\",\n  twitter: \"https://twitter.com/iotex_io\",\n  color: \"#01943f\",\n  type: TYPE_PUBLICCHAIN,\n  bridges: [\n    {\n      \"address\": \"0xc2e0f31d739cb3153ba5760a203b3bd7c27f0d7a\",\n      \"chainId\": MAINNET,\n      \"name\": \"IoTeX Chain bridge\",\n    },\n  ]\n}\n\nexport default project\n","import {\n  TYPE_SIDECHAIN,\n  TYPE_PUBLICCHAIN,\n  TYPE_STAKING,\n  typeMap,\n} from './projectTypes.js'\nimport { BSC, XDAI } from './chainInfo.js'\n\nimport anyswap from './projects/anyswap.js'\nimport connext from './projects/connext.js'\nimport cbridge from './projects/cbridge.js'\n\nimport arbitrum from './projects/arbitrum.js'\nimport aztec from './projects/aztec.js'\nimport avalanche from './projects/avalanche.js'\nimport bsc from './projects/bsc.js'\nimport boba from './projects/boba.js'\nimport dydx from './projects/dydx.js'\nimport deversifi from './projects/deversifi.js'\nimport eth2 from './projects/eth2.js'\nimport fantom from './projects/fantom.js'\nimport fusion from './projects/fusion.js'\nimport gluon from './projects/gluon.js'\nimport habitat from './projects/habitat.js'\nimport harmony from './projects/harmony.js'\nimport hermez from './projects/hermez.js'\nimport heco from './projects/heco.js'\nimport hop from './projects/hop.js'\nimport immutablex from './projects/immutablex.js'\nimport layer2finance from './projects/layer2finance.js'\nimport loopring from './projects/loopring.js'\nimport moonriver from './projects/moonriver.js'\nimport metis from './projects/metis.js'\nimport near from './projects/near.js'\nimport okex from './projects/okex.js'\nimport omg from './projects/omg.js'\nimport optics from './projects/optics.js'\nimport optimism from './projects/optimism.js'\nimport orbit from './projects/orbit.js'\nimport polygon from './projects/polygon.js'\nimport polynetwork from './projects/polynetwork.js'\nimport rsk from './projects/rsk.js'\nimport solana from './projects/solana.js'\nimport sorare from './projects/sorare.js'\nimport xdai from './projects/xdai.js'\nimport zkswap from './projects/zkswap.js'\nimport zksync from './projects/zksync.js'\nimport iotex from './projects/iotex.js'\n\nexport const NOT_LAYER2 = [TYPE_SIDECHAIN, TYPE_PUBLICCHAIN, TYPE_STAKING]\n\nexport const getTypeMap = (type) => typeMap[type] || 'Unknown'\n\n// define in alphabetic order\n\n// not categorize as sidechain or layer 2, but provides liquidity\nexport const LIQUIDITY_PROJECTS = {\n  [anyswap.name]: anyswap,\n  [connext.name]: connext,\n  [cbridge.name]: cbridge,\n  [hop.name]: hop,\n  [optics.name]: optics,\n  [orbit.name]: orbit,\n}\n\n// define in alphabetic order\nexport const ETH_BRIDGE_CONTRACTS = {\n  [arbitrum.name]: arbitrum,\n  [aztec.name]: aztec,\n  [avalanche.name]: avalanche,\n  [bsc.name]: bsc,\n  [boba.name]: boba,\n  [cbridge.name]: cbridge,\n  [connext.name]: connext,\n  [dydx.name]: dydx,\n  [deversifi.name]: deversifi,\n  [eth2.name]: eth2,\n  [fantom.name]: fantom,\n  [fusion.name]: fusion,\n  [gluon.name]: gluon,\n  [habitat.name]: habitat,\n  [harmony.name]: harmony,\n  [hermez.name]: hermez,\n  [heco.name]: heco,\n  [hop.name]: hop,\n  [immutablex.name]: immutablex,\n  [layer2finance.name]: layer2finance,\n  [loopring.name]: loopring,\n  [metis.name]: metis,\n  [moonriver.name]: moonriver,\n  [near.name]: near,\n  [okex.name]: okex,\n  [omg.name]: omg,\n  [optics.name]: optics,\n  [optimism.name]: optimism,\n  [orbit.name]: orbit,\n  [polygon.name]: polygon,\n  [polynetwork.name]: polynetwork,\n  [rsk.name]: rsk,\n  [solana.name]: solana,\n  [sorare.name]: sorare,\n  [xdai.name]: xdai,\n  [zkswap.name]: zkswap,\n  [zksync.name]: zksync,\n  [iotex.name]: iotex,\n}\n\n// WIP\nexport const XDAI_BRIDGE_CONTRACTS = {\n  \"xDai\": {\n    // https://www.xdaichain.com/for-users/bridges/converting-xdai-via-bridge/transfer-sai-dai-without-the-ui-using-web3-or-mobile-wallet\n    \"bridges\": [\n      {\n        \"address\": \"0x7301CFA0e1756B71869E93d4e4Dca5c7d0eb0AA6\",\n        \"name\": \"Dai Bridge\",\n        \"chainId\": XDAI,\n      }, // xdai to ethereum\n    ],\n    \"explorer\": \"https://blockscout.com/poa/xdai/\",\n    \"website\": \"https://www.xdaichain.com/\",\n    \"twitter\": \"https://twitter.com/xdaichain\",\n    \"color\": \"#1ca9a6\",\n    \"type\": TYPE_SIDECHAIN\n  },\n}\n\n// WIP\nexport const BSC_BRIDGE_CONTRACTS = {\n  \"PolyNetwork\": {\n    // https://github.com/polynetwork/docs/blob/master/config/README.md\n    \"bridges\": [\n      {\n        \"address\": \"0x2f7ac9436ba4B548f9582af91CA1Ef02cd2F1f03\",\n        \"name\": \"Lock Proxy\",\n        \"chainId\": BSC,\n      },\n    ],\n    \"explorer\": \"https://explorer.poly.network/\",\n    \"website\": \"https://www.poly.network/\",\n    \"github\": \"https://github.com/polynetwork\",\n    \"twitter\": \"https://twitter.com/PolyNetwork2\",\n    \"color\": \"#2222FF\",\n    \"type\": TYPE_SIDECHAIN\n  },\n}\n","import human from 'millify'\nimport {A} from 'hookrouter'\n\nimport { ETH_BRIDGE_CONTRACTS, getTypeMap } from '../helpers/bridge_contracts.js'\n\nexport const ProjectTableRow = ({name, data, price}) => {\n  const project = data[name]\n  const projMeta = ETH_BRIDGE_CONTRACTS[name]\n  const sum = price === 1 ? `Ξ${human(project.tvl)}` : `$${human(project.tvl * price)}`\n  return (\n    <tr>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n          <div className=\"flex items-center\">\n              {projMeta.color && (<div className=\"flex-shrink-0\">\n                  <a href={projMeta.website} target=\"_blank\" className=\"block relative\" style={{color: projMeta.color}} rel=\"noreferrer\">\n                      {/* <img alt=\"profil\" src={projMeta.logoUrl} class=\"mx-auto object-cover rounded-full h-10 w-10 \"/> */}\n                      ●\n                  </a>\n              </div>)}\n              <div className=\"ml-3\">\n                <A href={`/project/${name}`} className=\"text-blue-500 underline whitespace-no-wrap\">{name}</A>\n              </div>\n          </div>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n          <p className=\"text-gray-900 whitespace-no-wrap\">\n              {sum}\n          </p>\n      </td>\n      {/* <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n          <p className=\"text-gray-900 whitespace-no-wrap\">\n              Share\n          </p>\n      </td> */}\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n          <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n              <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n              </span>\n              <span className=\"relative\">\n                  {getTypeMap(projMeta.type)}\n              </span>\n          </span>\n      </td>\n    </tr>\n  )\n}\n","import useDimensions from \"react-cool-dimensions\"\nimport _throttle from 'lodash/throttle'\n\nexport const Panel = ({children}) => {\n  const { observe/*, width*/ } = useDimensions({\n    onResize: _throttle(({ observe, unobserve }) => {\n      unobserve(); // To stop observing the current target element\n      observe(); // To re-start observing the current target element\n    }, 500),\n  });\n  // const adaptWidth = width > 600\n  //   ? 600\n  //   : width < 450\n  //     ? 400\n  //     : width\n  // console.log(width, adaptWidth)\n  return (\n    <div ref={observe} className=\"container mx-auto px-4 sm:px-8 max-w-3xl\">\n      <div className=\"py-4\">\n          <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n              <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\n                {children}\n              </div>\n          </div>\n      </div>\n    </div>\n  )\n}\n","import {memo, useState} from 'react'\nimport { Sankey, Hint } from 'react-vis'\nimport human from 'millify'\n\nimport { ETH_BRIDGE_CONTRACTS } from '../helpers/bridge_contracts.js'\nimport { FLOW_THRESHOLD, L2_FLOW_THRESHOLD } from '../helpers/constants'\n\nconst ETH_COLOR = '#747c84' //'#8facee'\nconst LINK_COLOR = '#babcbc' //'#ecf0f1',\n\nconst BLURRED_LINK_OPACITY = 0.3;\nconst FOCUSED_LINK_OPACITY = 0.6;\n\nexport const BalanceFlow = memo(({ data, price, projects, layer2, width = 400 }) => {\n  const [activeLink, setActiveLink] = useState(null)\n\n  const threshold = layer2 ? L2_FLOW_THRESHOLD : FLOW_THRESHOLD\n  // console.log('%O', data)\n  const inbound = [\n    // {\n    //   name: 'WBTC',\n    //   color: 'red',\n    // },\n    // {\n    //   name: 'renBTC',\n    //   color: 'red',\n    // },\n  ]\n  const entries = projects\n    .filter(proj => data[proj].tvl > threshold)\n  const rests = projects.filter(proj => !entries.includes(proj))\n  // const nodes = [\n  //   {name: 'Ethereum'},\n  //   {name: 'others'},\n  // ]\n  const nodes = [\n    ...inbound,\n    {name: 'Ethereum', color: ETH_COLOR}, // 0\n    ...entries.map((entry) => ({\n      name: entry,\n      color: ETH_BRIDGE_CONTRACTS[entry].color,\n    })),\n    {name: 'Others'},\n  ]\n\n  // https://vis4.net/palettes/#/9|d|3a5cbc,7eb1a6,ffffe0|ffffe0,ff005e,93003a|1|1\n  // const pallete = ['#3a5cbc', '#6c87b7', '#97b0bb', '#c7d8c9', '#ffffe0', '#ffbcaf', '#f4777f', '#cf3759', '#93003a'];\n  // [\n  //   {source: 0, target: 1, value: 61.60},\n  //   {source: 0, target: 2, value: 31.32},\n  //   {source: 0, target: 4, value: 2.73},\n  // ];\n  const ethIdx = inbound.length\n  const outShift = ethIdx + 1\n  // const inboundLinks = inbound.map((entry, idx) => ({\n  //   source: idx,\n  //   target: ethIdx,\n  //   value: 9735057587,\n  //   color: entry.color\n  // }))\n  const mainLinks = entries.map((entry, idx) => ({\n    source: ethIdx,\n    target: idx + outShift,\n    value: data[entry].tvl,\n    color: idx < 4 ? ETH_BRIDGE_CONTRACTS[entry].color : LINK_COLOR,\n  }))\n  // const restShare = entries.reduce(\n  //   (a, c) => a - c.share,\n  //   100\n  // )\n  const restShare = rests.reduce((a,c)=> a + data[c].tvl, 0)\n  const links = [\n    // ...inboundLinks,\n    ...mainLinks,\n    {\n      source: 0,\n      target: entries.length + outShift,\n      value: restShare,\n      color: LINK_COLOR,\n    }\n  ].map((d, i) => ({\n    ...d,\n    opacity:\n      activeLink && i === activeLink.index\n        ? FOCUSED_LINK_OPACITY\n        : BLURRED_LINK_OPACITY\n  }))\n  // console.log('%O', links)\n\n  const renderHint = () => {\n    const hintValue = {\n      [`${activeLink.target.name}`]: human(activeLink.value * price)\n    };\n\n    return <Hint\n      value={hintValue}\n      align={{vertical: 'top', horizontal: 'left'}}\n      x={50}\n      y={-50}\n    />;\n  }\n\n  return (\n    <Sankey\n      nodes={nodes}\n      links={links}\n      margin={{ left: 20, right: 20, top: 10, bottom: 10 }}\n      height={300}\n      width={width}\n      onLinkMouseOver={node => setActiveLink(node)}\n      onLinkMouseOut={() => setActiveLink(null)}\n    >\n      {activeLink && renderHint()}\n    </Sankey>\n  )\n})\n","export const Badge = ({text}) => (\n  <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n      <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n      </span>\n      <span className=\"relative\">\n        {text}\n      </span>\n  </span>\n)\n","export default __webpack_public_path__ + \"static/media/hole.58c9d202.svg\";","import { GitHub } from 'react-feather'\n\nimport { Badge } from './Badge'\nimport hole from './hole.svg'\n\nimport { getTimeTag } from '../helpers/formatDate'\n\nexport const Nav = ({ethUsdPrice, timestamp}) => {\n  const price = ethUsdPrice === 1 ? '' : `Ξ = $${ethUsdPrice}`\n  const todayInfo = timestamp && `${getTimeTag('today', timestamp)} ${price}`\n  return (\n  <nav className=\"flex bg-white flex-wrap items-center justify-between p-4\">\n    <div className=\"lg:order-2 w-auto lg:w-1/5 lg:text-center\">\n        <img className=\"absolute hidden md:block md:mt-1 lg:ml-6\" src={hole} width={24} height={24} alt=\"ethhole.link\" />\n        <a className=\"md:ml-6 lg:ml-2 text-xl text-gray-800 font-semibold font-heading pl-2\" href=\"/\">\n        ETH Hole\n        </a>\n    </div>\n    <div className=\"block lg:hidden\">\n        {/* <button className=\"navbar-burger flex items-center py-2 px-3 text-indigo-500 rounded border border-indigo-500\">\n            <svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                <title>\n                    Menu\n                </title>\n                <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\">\n                </path>\n            </svg>\n        </button> */}\n        <Badge text={todayInfo} />\n    </div>\n    <div className=\"navbar-menu hidden lg:order-1 lg:block w-full lg:w-2/5\">\n        {/* <a className=\"block lg:inline-block mt-4 lg:mt-0 mr-10 text-blue-900 hover:text-indigo-600\" href=\"#\">\n            Home\n        </a>\n        <a className=\"block lg:inline-block mt-4 lg:mt-0 mr-10 text-blue-900 hover:text-indigo-600\" href=\"#\">\n            Team\n        </a>\n        <a className=\"block lg:inline-block mt-4 lg:mt-0 text-blue-900 hover:text-indigo-600\" href=\"#\">\n\n        </a> */}\n        <Badge text={todayInfo} />\n    </div>\n    <div className=\"navbar-menu hidden lg:order-3 lg:block w-full lg:w-2/5 lg:text-right\">\n        {/* <a className=\"block lg:inline-block mt-4 lg:mt-0 mr-10 text-blue-900 hover:text-indigo-600\" href=\"#\">\n            Content\n        </a>\n        <a className=\"block lg:inline-block mt-4 lg:mt-0 mr-10 text-blue-900 hover:text-indigo-600\" href=\"#\">\n            FAQ\n        </a> */}\n        <a className=\"block lg:inline-block mt-4 lg:mt-0 text-blue-900 hover:text-indigo-600\" target=\"_blank\" href=\"https://github.com/gasolin/ethhole\" rel=\"noreferrer\">\n          <GitHub />\n        </a>\n        {/* <button type=\"button\" className=\"flex items-center justify-center w-full rounded-md  px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-50 hover:bg-gray-50 dark:hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-gray-500\" id=\"options-menu\">\n\n        </button> */}\n    </div>\n  </nav>\n  );\n};\n","import { GitHub, Twitter } from 'react-feather'\n\nexport const Footer = () => (\n  <footer className=\"px-3 py-8 bg-white dark:bg-gray-800 text-2 text-gray-500 dark:text-gray-200 transition-colors duration-200\">\n      <div className=\"flex flex-col\">\n          <div className=\"md:hidden mt-7 mx-auto w-11 h-px rounded-full\">\n          </div>\n          <div className=\"mt-4 md:mt-0 flex flex-col md:flex-row\">\n              <nav className=\"flex-1 flex flex-col items-center justify-center md:items-end md:border-r border-gray-100 md:pr-5\">\n                  <a aria-current=\"page\" href=\"http://gasolin.idv.tw/eth-milestone\" className=\"hover:text-gray-700 dark:hover:text-white\" target=\"_blank\" rel=\"noreferrer\">\n                      Ethereum Milestone\n                  </a>\n                  <a aria-current=\"page\" href=\"https://github.com/gasolin/ethhole/tree/main/src/data\" className=\"hover:text-gray-700 dark:hover:text-white\" target=\"_blank\" rel=\"noreferrer\">\n                      Raw Data\n                  </a>\n                  <a aria-current=\"page\" href=\"https://github.com/gasolin/ethhole/blob/main/src/helpers/bridge_contracts.js\" className=\"hover:text-gray-700 dark:hover:text-white\" target=\"_blank\" rel=\"noreferrer\">\n                      List Your Project\n                  </a>\n              </nav>\n              <div className=\"md:hidden mt-4 mx-auto w-11 h-px rounded-full\">\n              </div>\n              <div className=\"mt-4 md:mt-0 flex-1 flex items-center justify-center md:border-r border-gray-100\">\n                  <a className=\"hover:text-primary-gray-20\" href=\"https://github.com/gasolin/ethhole\" target=\"_blank\" rel=\"noreferrer\">\n                      <span className=\"sr-only\">\n                          View on GitHub\n                      </span>\n                      <GitHub />\n                  </a>\n                  <a className=\"ml-4 hover:text-primary-gray-20\" href=\"https://twitter.com/stakerwatch\" target=\"_blank\" rel=\"noreferrer\">\n                      <span className=\"sr-only\">\n                          Twitter\n                      </span>\n                      <Twitter />\n                  </a>\n              </div>\n              <div className=\"md:hidden mt-4 mx-auto w-11 h-px rounded-full \">\n              </div>\n              <div className=\"mt-7 md:mt-0 flex-1 flex flex-col items-center justify-center md:items-start md:pl-5\">\n                  <span className=\"\">\n                      © 2021\n                  </span>\n                  <span className=\"mt-7 md:mt-1\">\n                      Created by{' '}\n                      <a className=\"underline hover:text-primary-gray-20\" href=\"https://twitter.com/stakerwatch\" target=\"_blank\" rel=\"noreferrer\">\n                        @stakerwatch\n                      </a>\n                  </span>\n                  <span>\n                  <a className=\"underline hover:text-primary-gray-20\" href=\"https://www.flaticon.com/free-icon/hole_595435?term=hole&related_id=595435\" target=\"_blank\" rel=\"noreferrer\">\n                    Logo credit freepik\n                  </a>\n                  </span>\n              </div>\n          </div>\n      </div>\n  </footer>\n)\n","import { Panel } from '../components/Panel'\n\nexport const Banner = () => //(<></>)\n(\n  <Panel>\n    <div class=\"text-center w-full mx-auto py-4 px-4 z-20\">\n      <h2 class=\"text-3xl font-extrabold text-black dark:text-white sm:text-4xl\">\n        <span class=\"block\">\n          Support Public Goods like us\n        </span>\n        <span class=\"block text-indigo-400\">\n          in Gitcoin Grant 12\n        </span>\n      </h2>\n      <div class=\"lg:mt-0 lg:flex-shrink-0\">\n        <div class=\"mt-12 inline-flex rounded-md shadow\">\n          <a className=\"py-4 px-6  bg-indigo-500 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg\" href=\"https://gitcoin.co/grants/2758/ethholelink\" target=\"_blank\" rel=\"noreferrer\">Join</a>\n        </div>\n      </div>\n    </div>\n  </Panel>\n)\n","import { useState } from \"react\"\nimport { navigate } from 'hookrouter'\n\nimport { useChainData } from '../hooks/useChainData'\nimport { TotalValueTracked } from '../components/TotalValueTracked'\nimport { ProjectsTable } from '../components/ProjectsTable'\nimport { ProjectTableRow } from '../components/ProjectTableRow'\nimport { Panel } from '../components/Panel'\nimport { BalanceFlow } from '../components/BalanceFlow'\nimport { Nav } from '../components/Nav'\nimport { Footer } from '../components/Footer'\nimport { Banner } from '../components/Banner'\nimport { ETH_BRIDGE_CONTRACTS, NOT_LAYER2 } from '../helpers/bridge_contracts'\n\nconst FILTEROUT = ['ethereum', 'fuse']\n// console.log('%O', chainData)\n\nconst getProjects = (chainData, isLayer2) => {\n  return Object.keys(chainData)\n  .filter(proj =>\n    ETH_BRIDGE_CONTRACTS[proj] &&\n    !FILTEROUT.includes(proj) &&\n    // layer 2 strict mode\n    (!isLayer2 || !NOT_LAYER2.includes(ETH_BRIDGE_CONTRACTS[proj].type))\n  )\n  .sort((a, b) => chainData[b].tvl - chainData[a].tvl)\n  // console.log('projects %O', projects)\n}\n\nexport const Main = ({layer2}) => {\n  const [chainData, timestamp] = useChainData()\n  const [showEth, setShowEth] = useState(false)\n\n  const toggleValue = () => setShowEth(!showEth)\n  const projects = getProjects(chainData, layer2)\n\n  const price = showEth ? 1 : chainData?.ethereum?.usd || 1\n  const symbol = showEth ? 'ETH' : 'USD'\n  const tvl = projects.reduce((a,c) => a + chainData[c].tvl, 0)\n  const toggleStrictMode = () => layer2 ? navigate('/') : navigate('/layer2')\n\n  return (<>\n    <Nav ethUsdPrice={price} timestamp={timestamp} />\n    <Panel>\n      <BalanceFlow projects={projects} data={chainData} price={price} layer2={layer2} />\n    </Panel>\n    <Panel>\n      <TotalValueTracked projects={projects} tvl={tvl} price={price} >\n        <div className=\"mb-3 pr-2\">\n          <div className=\"relative inline-block w-10 mr-2 align-middle select-none\">\n            <input type=\"checkbox\" name=\"toggle\" id=\"eth\" onChange={toggleValue} checked={showEth} className=\"checked:bg-purple-500 outline-none focus:outline-none right-4 checked:right-0 duration-200 ease-in absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer\"/>\n            <label htmlFor=\"eth\" className=\"block overflow-hidden h-6 rounded-full bg-gray-300 cursor-pointer\">\n            </label>\n          </div>\n          <span className=\"text-gray-400 font-medium\">\n            {symbol} Equivalent\n          </span>\n        </div>\n        <div className=\"mb-3\">\n          <div className=\"relative inline-block w-10 mr-2 align-middle select-none\">\n            <input type=\"checkbox\" name=\"toggle\" id=\"strict\" onChange={toggleStrictMode} checked={layer2} className=\"checked:bg-purple-500 outline-none focus:outline-none right-4 checked:right-0 duration-200 ease-in absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer\"/>\n            <label htmlFor=\"strict\" className=\"block overflow-hidden h-6 rounded-full bg-gray-300 cursor-pointer\">\n            </label>\n          </div>\n          <span className=\"text-gray-400 font-medium\">\n            Strict Mode\n          </span>\n        </div>\n      </TotalValueTracked>\n    </Panel>\n    <Panel>\n      <ProjectsTable>\n        {projects.map(proj => <ProjectTableRow key={proj} price={price} name={proj} data={chainData} />)}\n      </ProjectsTable>\n    </Panel>\n    <Banner/>\n    <Footer/>\n  </>)\n}\n","import { ETH_BRIDGE_CONTRACTS, LIQUIDITY_PROJECTS } from '../helpers/bridge_contracts'\n\nconst wildcards = Object.keys(LIQUIDITY_PROJECTS)\nexport const ProjectMetas = ({proj}) => {\n  const projMeta = wildcards.includes(proj)\n    ? LIQUIDITY_PROJECTS[proj]\n    : ETH_BRIDGE_CONTRACTS[proj]\n  const meta = [\n    ['Website', projMeta.website],\n    ['Explorer', projMeta.explorer],\n    ['Github', projMeta.github],\n    ['Twitter', projMeta.twitter],\n  ];\n  return (\n    <div className=\"bg-white overflow-hidden\">\n      <div className=\"px-4 py-5 sm:px-6\">\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900 flex flex-row\">\n            {projMeta.color && (<span>\n              <a href={projMeta.website} target=\"_blank\" className=\"block relative pr-2\" style={{color: projMeta.color}} rel=\"noreferrer\">\n                  ●\n              </a>\n            </span>)} {proj}\n          </h3>\n          {/* <p class=\"mt-1 max-w-2xl text-sm text-gray-500\">\n              Details and informations about user.\n          </p> */}\n      </div>\n      <div className=\"border-t border-gray-200\">\n          <dl>\n            {meta.filter(item => item[1]).map((item, idx) => (\n              <div key={item[0]} className={`${idx%2 ? 'bg-white' : 'bg-gray-50'} px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6`}>\n                <dt className=\"text-sm font-medium text-gray-500\">\n                  {item[0]}:\n                </dt>\n                <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                  <a href={item[1]} target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-500 underline whitespace-no-wrap\">{item[1]}</a>\n                </dd>\n              </div>\n            ))}\n          </dl>\n      </div>\n    </div>\n  )\n}\n","export const TokensTable = ({children}) => (\n  <table className=\"min-w-full leading-normal\">\n      <thead>\n          <tr>\n              <th scope=\"col\" className=\"px-5 py-3 bg-white  border-t border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                  Token\n              </th>\n              {/* <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                  Balance\n              </th> */}\n              <th scope=\"col\" className=\"px-5 py-3 bg-white  border-t border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                  Value\n              </th>\n              <th scope=\"col\" className=\"px-5 py-3 bg-white  border-t border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                  Type\n              </th>\n          </tr>\n      </thead>\n      <tbody>\n          {children}\n      </tbody>\n  </table>\n)\n","export const TokenTableRow = ({bridge, idx, tokenData, sum}) => {\n  const {contract_ticker_symbol, logo_url, contract_address, type} = tokenData\n  const link = type === 'protocol'\n    ? `https://zapper.fi/dashboard?address=${bridge}`\n    : `https://etherscan.io/token/${contract_address}?a=${bridge}`\n  return (\n    <tr>\n      <td className={`${idx%2 ? 'bg-white' : 'bg-gray-50'} px-5 py-5 border-b border-gray-200 bg-white text-sm`}>\n          <div className=\"flex flex-row items-center\">\n              <img src={logo_url} width=\"14\" height=\"14\"/>\n              <div className=\"ml-3\">\n                <a href={link} target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-500 underline whitespace-no-wrap pl-2\">{contract_ticker_symbol}</a>\n              </div>\n          </div>\n      </td>\n      {/* <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n          <p className=\"text-gray-900 whitespace-no-wrap\">\n            {balance}\n          </p>\n      </td> */}\n      <td className={`${idx%2 ? 'bg-white' : 'bg-gray-50'} px-5 py-5 border-b border-gray-200 bg-white text-sm`}>\n          <p className=\"text-gray-900 whitespace-no-wrap\">\n              {sum}\n          </p>\n      </td>\n      <td className={`${idx%2 ? 'bg-white' : 'bg-gray-50'} px-5 py-5 border-b border-gray-200 bg-white text-sm`}>\n        {type !== 'cryptocurrency' && (<span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n            <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n            </span>\n            <span className=\"relative\">\n            {type}\n            </span>\n          </span>)\n        }\n      </td>\n    </tr>\n  )\n}\n","import human from 'millify'\nimport { Chart } from \"react-google-charts\"\n\n// https://react-google-charts.com/treemap-chart\nexport const TokensTree = ({project, tokens, price, width = 400}) => {\n  const tokenNames = []\n  const tokenData = [\n    [\n      'Token',\n      'Parent',\n      'Value',\n      'Amount',\n    ],\n    [project, null, 0, 0],\n    ...tokens\n      .filter(item => {\n        if (tokenNames.includes(item.contract_ticker_symbol)) {\n          return false\n        }\n        tokenNames.push(item.contract_ticker_symbol)\n        return true\n      })\n      .map(item => [item.contract_ticker_symbol, project, item.quote, item.quote]),\n  ]\n\n  return (\n    <Chart\n      width={`${width}px`}\n      height={'300px'}\n      chartType=\"TreeMap\"\n      loader={<div>Loading Chart</div>}\n      data={tokenData}\n      options={{\n        minColor: '#9eebff',\n        midColor: '#72bbd4',\n        maxColor: '#5da3bf',\n        headerHeight: 15,\n        fontColor: 'black',\n        showScale: true,\n        legend: 'none',\n        generateTooltip: (row, size, value) => {\n          return (\n            `<div>$${human(size * price)}</div>`\n          )\n        },\n      }}\n      rootProps={{ 'data-testid': '1' }}\n    />\n  )\n}\n","import {A, useTitle} from 'hookrouter'\nimport { Chart } from \"react-google-charts\"\n\nimport { getTVL } from '../helpers/formatTVL'\n\nimport { useChainData } from '../hooks/useChainData'\nimport { ETH_BRIDGE_CONTRACTS } from '../helpers/bridge_contracts'\nimport { Panel } from '../components/Panel'\nimport { Nav } from '../components/Nav'\nimport { Footer } from '../components/Footer'\nimport { ProjectMetas } from '../components/ProjectMetas'\nimport { TotalValueTracked } from '../components/TotalValueTracked'\nimport { TokensTable } from '../components/TokensTable'\nimport { TokenTableRow } from '../components/TokenTableRow'\nimport { TokensTree } from '../components/TokensTree'\nimport { Banner } from '../components/Banner'\nimport { FILLTER } from '../helpers/constants'\n\nexport const Project = ({proj}) => {\n  const [chainData, timestamp] = useChainData()\n  const [prevChainData] = useChainData('yesterday')\n  useTitle(proj)\n\n  const projectData = chainData[proj]\n\n  if (!projectData) return null\n\n  const prevProjectData = prevChainData[proj]\n\n  const price =  chainData?.ethereum?.usd || 1\n  const threshold = FILLTER / price\n  // TODO: support toggle symbol\n  const symbol = '$' //price !== 1 ? 'Ξ' : '$'\n  const tvl = projectData.tvl\n  const tvlTrend = prevProjectData?.tvl ? projectData.tvl - prevProjectData.tvl > 0 : undefined\n  const tvlDiff = prevProjectData?.tvl && prevProjectData.tvl > 0 ? ((projectData.tvl - prevProjectData.tvl) / prevProjectData.tvl * 100).toFixed(2) + '%' : undefined\n\n  const getBridgesByProject = (proj) => ETH_BRIDGE_CONTRACTS[proj].bridges\n  const getBridgeName = (proj, idx) => {\n    const bridgesMeta = getBridgesByProject(proj)\n    return bridgesMeta[idx]?.name || `Bridge ${idx + 1}`\n  }\n\n  return (\n    <>\n      <Nav ethUsdPrice={price} timestamp={timestamp} />\n      <Panel>\n        <ProjectMetas proj={proj} />\n      </Panel>\n      {projectData.bridges.length > 1 && (<Panel>\n        <Chart\n          width={'400px'}\n          height={'300px'}\n          chartType=\"Sankey\"\n          loader={<div>Loading Chart</div>}\n          data={[\n            ['From', 'To', 'TVL'],\n            ...projectData.bridges.map((bridge, idx) => {\n              const bridgeName = getBridgeName(proj, idx)\n              return [bridgeName, proj, bridge.tvl]\n            })\n          ]}\n          rootProps={{ 'data-testid': '1' }}\n        />\n      </Panel>)}\n      <Panel>\n        <TotalValueTracked price={price} tvl={tvl} tvlTrend={tvlTrend} tvlDiff={tvlDiff}></TotalValueTracked>\n      </Panel>\n      {projectData.bridges\n        // .sort((a, b) => b.tvl - a.tvl)\n        .map((bridge, idx) => {\n        // console.log('%O', bridge)\n        const bridgesMeta = ETH_BRIDGE_CONTRACTS[proj].bridges\n        const tokens = bridge.items.filter(item => item.quote > threshold)\n        const bridgeName = bridgesMeta[idx]?.name || `Bridge ${idx + 1}`\n        const bridgeLink = bridgesMeta[idx]?.website\n          ? <a href={bridgesMeta[idx].website} className=\"text-blue-500 underline whitespace-no-wrap\" target=\"_blank\" rel=\"noreferrer\">{bridgeName}</a>\n          : <span>{bridgeName}</span>\n        const contractLink = (\n          <a href={`https://etherscan.io/address/${bridgesMeta[idx].address}`} target=\"_blank\" rel=\"noreferrer\" alt=\"smart contract\">📝</a>\n        )\n        const bridgeProvider = bridgesMeta[idx]?.project\n        const sum = getTVL(bridge.tvl, price, bridgeName)\n        return (\n          <Panel key={idx}>\n            <div className=\"p-4 bg-white dark:bg-gray-800 border-b border-gray-200\">\n              <div className=\"flex items-center\">\n                <p className=\"text-md text-black dark:text-white ml-2\">\n                {bridgeLink}{' '}\n                {contractLink}{' '}\n                ({symbol}{sum})\n                {bridgeProvider && <> by <A className=\"text-blue-500 underline whitespace-no-wrap\" href={`/liquidity/${bridgeProvider}`}>{bridgeProvider}</A></>}\n                </p>\n              </div>\n            </div>\n            <TokensTree project={proj} tokens={tokens} price={price} />\n            <TokensTable>\n            {tokens.map((item, idx) => {\n              const symbol = item.contract_ticker_symbol\n              return (\n                <TokenTableRow\n                  key={symbol}\n                  idx={idx}\n                  tokenData={item}\n                  bridge={bridge.address}\n                  sum={`$${getTVL(item.quote, price, symbol)}`}\n                />\n              )\n            })}\n            </TokensTable>\n          </Panel>\n        )\n      })}\n      <Banner/>\n      <Footer/>\n    </>\n  )\n}\n","import {A, useTitle} from 'hookrouter'\nimport human from 'millify'\n\nimport { useChainData } from '../hooks/useChainData'\nimport { ETH_BRIDGE_CONTRACTS } from '../helpers/bridge_contracts'\nimport { Panel } from '../components/Panel'\nimport { Nav } from '../components/Nav'\nimport { Footer } from '../components/Footer'\nimport { ProjectMetas } from '../components/ProjectMetas'\nimport { TokensTable } from '../components/TokensTable'\nimport { TokenTableRow } from '../components/TokenTableRow'\nimport { TokensTree } from '../components/TokensTree'\nimport { Banner } from '../components/Banner'\n// import { FILLTER } from '../helpers/constants'\n\nexport const Liquidity = ({proj}) => {\n  const [chainData, timestamp] = useChainData()\n  useTitle(proj)\n\n  const price =  chainData?.ethereum?.usd || 1\n  // const threshold = FILLTER / price\n  const symbol = '$' //price !== 1 ? 'Ξ' : '$'\n\n  if (Object.keys(chainData).length === 0) return null\n\n  // get project addresss\n  const projectContractList = Object.keys(ETH_BRIDGE_CONTRACTS).map(key => {\n    const bridges = ETH_BRIDGE_CONTRACTS[key].bridges && ETH_BRIDGE_CONTRACTS[key].bridges\n      .filter(bridge => bridge.project === proj)\n    // console.log('%O', bridges)\n    return bridges\n  }).flat(1)\n  // console.log('%O', projectContractList)\n  const metaMap = {}\n  projectContractList.map(entry => metaMap[entry.address.toLowerCase()] = entry)\n  // console.log('metaMap %O', metaMap)\n\n  const bridges = Object.keys(chainData)\n    .filter(project => chainData[project] && chainData[project].bridges)\n    // attach main project name to the bridge\n    .map(project => chainData[project].bridges\n      .map((bridge, idx) => ({...bridge, from: project, address: ETH_BRIDGE_CONTRACTS[project].bridges[idx].address.toLowerCase()}))\n      .filter(bridge => metaMap[bridge.address]))\n    .flat(1)\n  // console.log('%O', bridges)\n\n  return (\n    <>\n      <Nav ethUsdPrice={price} timestamp={timestamp} />\n      <Panel>\n        <ProjectMetas proj={proj} />\n      </Panel>\n      <Panel>\n        <div className=\"shadow-lg rounded-2xl p-4 bg-white dark:bg-gray-800\">\n              <div className=\"flex items-center\">\n                  <span className=\"rounded-xl relative p-4 bg-purple-200\">\n                      <svg width=\"40\" fill=\"currentColor\" height=\"40\" className=\"text-purple-500 h-4 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\" viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path d=\"M1362 1185q0 153-99.5 263.5t-258.5 136.5v175q0 14-9 23t-23 9h-135q-13 0-22.5-9.5t-9.5-22.5v-175q-66-9-127.5-31t-101.5-44.5-74-48-46.5-37.5-17.5-18q-17-21-2-41l103-135q7-10 23-12 15-2 24 9l2 2q113 99 243 125 37 8 74 8 81 0 142.5-43t61.5-122q0-28-15-53t-33.5-42-58.5-37.5-66-32-80-32.5q-39-16-61.5-25t-61.5-26.5-62.5-31-56.5-35.5-53.5-42.5-43.5-49-35.5-58-21-66.5-8.5-78q0-138 98-242t255-134v-180q0-13 9.5-22.5t22.5-9.5h135q14 0 23 9t9 23v176q57 6 110.5 23t87 33.5 63.5 37.5 39 29 15 14q17 18 5 38l-81 146q-8 15-23 16-14 3-27-7-3-3-14.5-12t-39-26.5-58.5-32-74.5-26-85.5-11.5q-95 0-155 43t-60 111q0 26 8.5 48t29.5 41.5 39.5 33 56 31 60.5 27 70 27.5q53 20 81 31.5t76 35 75.5 42.5 62 50 53 63.5 31.5 76.5 13 94z\">\n                          </path>\n                      </svg>\n                  </span>\n                  <p className=\"text-md text-black dark:text-white ml-2\">\n                      Total Value Tracked\n                  </p>\n              </div>\n              <div className=\"flex flex-col justify-start\">\n                  <p className=\"text-gray-700 dark:text-gray-100 text-4xl text-left font-bold my-4\">\n                  {symbol} {human(bridges.reduce((p,c) => p + c.tvl, 0) * price)}\n                  </p>\n                  <div className=\"flex items-center text-green-500 text-sm\">\n                      {/* <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path d=\"M1408 1216q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z\">\n                          </path>\n                      </svg> */}\n                      {/* <span>\n                          5.5%\n                      </span> */}\n                  </div>\n              </div>\n            </div>\n      </Panel>\n      {bridges.map((bridge, idx) => (\n        <Panel key={idx}>\n          <div className=\"p-4 bg-white dark:bg-gray-800 border-b border-gray-200\">\n            <div className=\"flex items-center\">\n              <p className=\"text-md text-black dark:text-white ml-2\">\n              🔎 <a href={`https://etherscan.io/address/${bridge.address}`} className=\"text-blue-500 underline whitespace-no-wrap\" target=\"_blank\" rel=\"noreferrer\">{metaMap[bridge.address]?.name || `Bridge ${idx + 1}`}</a>\n              {' '}({symbol}{human(bridge.tvl * price)}) for <A className=\"text-blue-500 underline whitespace-no-wrap\" href={`/project/${bridge.from}`}>{bridge.from}</A>\n              </p>\n            </div>\n          </div>\n          <TokensTree project={proj} tokens={bridge.items} price={price} />\n          <TokensTable>\n          {bridge.items.map((item, idx) => {\n            // console.log('%O', item)\n            const symbol = item.contract_ticker_symbol\n            return (\n              <TokenTableRow key={symbol} idx={idx} tokenData={item} bridge={bridge.address} sum={`$${human(item.quote * price)}`} />\n            )\n          })}\n          </TokensTable>\n        </Panel>\n      ))}\n      <Banner/>\n      <Footer/>\n    </>\n  )\n}\n","export const SupplyTable = ({children}) => (\n  <table className=\"min-w-full leading-normal\">\n      <thead>\n        <tr>\n            <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                Name\n            </th>\n            <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                Value Supplied\n            </th>\n            {/* <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                Market Share\n            </th> */}\n            <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-normal\">\n                Type\n            </th>\n        </tr>\n        {children}\n    </thead>\n  </table>\n)\n","import human from 'millify'\nimport { useCoingeckoTokenPrice } from '@usedapp/coingecko'\nimport { formatUnits } from '@ethersproject/units'\n\nimport { useTotalSupply, useDecimals } from '../hooks/useTotalSupply'\n\nconst countDecimals = function(value) {\n  if (value && Math.floor(value) !== value) {\n    const dec = value.toString().split(\".\")[1]\n    return (dec && dec.length) || 0;\n  }\n  return 0;\n}\n\nexport const TotalSupplyRow = ({name, tokenAddress, type}) => {\n  // console.warn('tokenAddress', tokenAddress)\n  const tokenSupply = useTotalSupply(tokenAddress)\n  const decimals = useDecimals(tokenAddress)\n  const tokenPrice = useCoingeckoTokenPrice(tokenAddress, 'usd')\n  // console.warn('price ', tokenPrice)\n  const priceDecimals = countDecimals(tokenPrice)\n  // console.warn('decimals ', priceDecimals, decimals)\n\n  if (tokenPrice && tokenSupply && decimals) {\n    const value = tokenSupply.mul(tokenPrice * (priceDecimals ? 10**priceDecimals : 1))\n    // console.warn(`>> ${name} value `, value.toString())\n    const val = formatUnits(value, decimals + priceDecimals)\n    // console.warn(`>> ${name} val `, val)\n    return (\n      <tr>\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n          <div className=\"flex items-center ml-3\">\n            {name}\n          </div>\n        </td>\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n          <p className=\"text-gray-900 whitespace-no-wrap\">\n          {tokenSupply && human(val)}\n          </p>\n        </td>\n        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n          <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n            <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n            </span>\n            <span className=\"relative\">\n              {type}\n            </span>\n          </span>\n        </td>\n      </tr>\n    )\n  }\n  return <p/>\n}\n","import { ERC20Interface, useContractCall } from '@usedapp/core'\n// import { Interface } from '@ethersproject/abi'\n\n// import ERC20 from './ERC20.json'\n// const ERC20Interface = new Interface(ERC20.abi)\n\nexport function useTotalSupply(tokenAddress) {\n  const [totalSupply] =\n    useContractCall(\n      tokenAddress && {\n        abi: ERC20Interface, // ABI interface of the called contract\n        address: tokenAddress, // On-chain address of the deployed contract\n        method: 'totalSupply', // Method to be called\n      }\n    ) ?? []\n  return totalSupply\n}\n\nexport function useDecimals(tokenAddress) {\n  const [decimals] =\n    useContractCall(\n      tokenAddress && {\n        abi: ERC20Interface, // ABI interface of the called contract\n        address: tokenAddress, // On-chain address of the deployed contract\n        method: 'decimals', // Method to be called\n      }\n    ) ?? []\n  return decimals\n}\n","import {useTitle} from 'hookrouter'\n// import human from 'millify'\n\nimport { useChainData } from '../hooks/useChainData'\nimport { Panel } from '../components/Panel'\nimport { Nav } from '../components/Nav'\nimport { Footer } from '../components/Footer'\nimport { SupplyTable } from '../components/SupplyTable'\nimport { TotalSupplyRow } from '../components/TotalSupplyRow'\nimport { Banner } from '../components/Banner'\n\n// https://www.gemini.com/cryptopedia/wrapped-bitcoin-vs-bitcoin-wbtc-tbtc-wnxm-hbtc-crypto\nconst supplyTokens = [\n  {\n    name: 'TETHER',\n    tokenAddress: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n    type: 'USD',\n  },\n  {\n    name: 'USDC',\n    tokenAddress: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n    type: 'USD',\n  },\n  {\n    name: 'BUSD',\n    tokenAddress: '0x4fabb145d64652a948d72533023f6e7a623c7c53',\n    type: 'USD',\n  },\n  {\n    name: 'WBTC',\n    tokenAddress: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n    type: 'BTC',\n  },\n  {\n    name: 'DAI',\n    tokenAddress: '0x6b175474e89094c44da98b954eedeac495271d0f',\n    type: 'USD',\n  },\n  {\n    name: 'HBTC',\n    tokenAddress: '0x0316EB71485b0Ab14103307bf65a021042c6d380',\n    type: 'BTC',\n  },\n  {\n    name: 'renBTC',\n    tokenAddress: '0xeb4c2781e4eba804ce9a9803c67d0893436bb27d',\n    type: 'BTC',\n  },\n  {\n    name: 'sBTC',\n    tokenAddress: '0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6',\n    type: 'BTC',\n  },\n  {\n    name: 'pTokenBTC',\n    tokenAddress: '0x5228a22e72ccc52d415ecfd199f99d0665e7733b',\n    type: 'BTC',\n  },\n  {\n    name: 'oBTC',\n    tokenAddress: '0x8064d9Ae6cDf087b1bcd5BDf3531bD5d8C537a68',\n    type: 'BTC',\n  },\n  {\n    name: 'imBTC',\n    tokenAddress: '0x3212b29E33587A00FB1C83346f5dBFA69A458923',\n    type: 'BTC',\n  },\n  {\n    name: 'tBTC',\n    tokenAddress: '0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa',\n    type: 'BTC',\n  },\n]\n\nexport const Flow = () => {\n  const [chainData, timestamp] = useChainData()\n  useTitle('Flow In')\n\n  const price =  chainData?.ethereum?.usd || 1\n\n  return (\n    <>\n      <Nav ethUsdPrice={price} timestamp={timestamp} />\n      <Panel>\n        <SupplyTable>\n          {supplyTokens.map(token => (\n            <TotalSupplyRow\n              name={token.name}\n              tokenAddress={token.tokenAddress}\n              type={token.type}\n            />\n          ))}\n        </SupplyTable>\n      </Panel>\n      <Banner/>\n      <Footer/>\n    </>\n  )\n}\n","import {Main} from './Main'\nimport {Project} from './Project'\nimport {Liquidity} from './Liquidity'\nimport {Flow} from './Flow'\n\nexport const routes = {\n  '/': () => <Main />,\n  '/l2': () => <Main layer2 />,\n  '/layer2': () => <Main layer2 />,\n  '/liquidity/:proj': ({proj}) => <Liquidity proj={proj.replaceAll('%20', ' ')}/>,\n  '/project/:proj': ({proj}) => <Project proj={proj.replaceAll('%20', ' ')} />,\n  '/flow': () => <Flow />\n}\n","import { Panel } from '../components/Panel'\nimport { Footer } from '../components/Footer'\n\nexport const NotFound = () => (\n  <>\n    <Panel>Project Not Found</Panel>\n    <Footer/>\n  </>\n)\n","import {useRoutes} from 'hookrouter'\nimport { routes } from './view/routes'\nimport { NotFound } from './view/NotFound'\nimport {DAppProvider, ChainId} from '@usedapp/core'\n\nimport { version as webVersion } from '../package.json'\n\nconst config = {\n  readOnlyChainId: ChainId.Mainnet,\n  readOnlyUrls: {\n    [ChainId.Mainnet]: 'https://eth-mainnet.zerion.io/'\n  }\n}\n\nfunction App() {\n  const Route = useRoutes(routes)\n  return (\n    <DAppProvider config={config}>\n      <div className=\"App\">\n        {Route || <NotFound/>}\n      </div>\n    </DAppProvider>\n  );\n}\n\nconsole.log('ethhole.link v', webVersion, 'go https://github.com/gasolin/ethhole to learn more')\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}